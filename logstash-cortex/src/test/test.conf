      input
      {
          generator
          {
            lines => [
              " 4478607923445297 ",
              " 4478607923445296 ",
              " '4478607923445297' ",
              "some text before4478607923445296 ",
              "some text before 4478607923445297 ",
              " 4478607923445297some more text",
              " 4478607923445296 some more text",
              "text",
              "4478607923445297",
              "4478607923445296",
              "'4478607923445297'",
              "some text before4478607923445296",
              "some text before 4478607923445297",
              "4478607923445297some more text",
              "4478607923445296 some more text",
              "text"
            ]
            count => 1
          }
      }

      filter
      {
          ruby
          {
             code => "

                   account_number_matches = event.get('message').match(/((?![^a-zA-Z_0-9\-\.]4111111111111111[^a-zA-Z_0-9\-])([^a-zA-Z_0-9\-\.](\d[\ \-]?\d[\ \-]?\d[\ \-]?\d[\ \-]?\d[\ \-]?\d[\ \-]?\d[\ \-]?\d[\ \-]?\d[\ \-]?\d[\ \-]?\d[\ \-]?\d[\ \-]?\d[\ \-]?\d[\ \-]?\d?[\ \-]?\d?[\ \-]?)[^a-zA-Z_0-9\-\%]))/)

                   if !account_number_matches.nil?
                          account_number = account_number_matches[3]
                          digits = account_number.chars.map(&:to_i)
                          check = digits.pop

                          sum = digits.reverse.each_slice(2).flat_map do |x, y|
                            [(x * 2).divmod(10), y || 0]
                          end.flatten.inject(:+)

                          if check.zero? ? sum % 10 == 0 : (10 - sum % 10) == check
                            event.set('message', event.get('message').gsub(/(\d[\ \-]?\d[\ \-]?\d[\ \-]?\d[\ \-]?\d[\ \-]?\d[\ \-]?\d[\ \-]?\d[\ \-]?\d[\ \-]?\d[\ \-]?\d[\ \-]?\d[\ \-]?\d[\ \-]?\d[\ \-]?\d?[\ \-]?\d?[\ \-]?)/, 'XXXX_CC_NUMBER_XXXX'))
                          end
                   end
             "
          }
      }

      output
      {
            stdout {
              codec => rubydebug
        }


      }
